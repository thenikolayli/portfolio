services:
  db:
    image: postgres:latest
    volumes: # db volume to save data for persistence
      - postgres_data:/var/lib/postgresql/data/
    environment: # variables for postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    expose: # port open only within the machine
      - 5432
    profiles:
      - nocert
      - wholewebsite
  gunicorn:
    image: nikolayli/solid_rework:latest
    volumes: # creates volume for nginx container
      - static_files:/backend/static
    env_file:
      - .env
    expose: # port open only within the machine
      - 8000
    depends_on: # wait for db container
      - db
    profiles:
      - nocert
      - wholewebsite
  nginx:
    image: nginx:latest
    volumes:
      - static_files:/backend/static
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports: # links ports 80 and 443 of container to machine
      - "80:80"
      - "443:443"
    profiles:
      - nocert
      - certonly
      - wholewebsite
#    command:  /bin/bash -c rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    profiles:
      - certonly
      - wholewebsite
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${CERT_EMAIL} -d ${CERT_DOMAIN} --agree-tos

# declares volumes used
volumes:
  postgres_data:
  static_files: